from flask import Flask, render_template, request
import csv
from import_model import *
app = Flask(__name__)

@app.route('/', methods = ['POST', 'GET'])
def index():
    if request.is_json:
        paths = request.get_json().get('paths')

        with open('static/data.csv', 'a', newline='') as f:
            writer = csv.writer(f)
            writer.writerow(paths)
        return {}
        
    return render_template('index.html')

@app.route('/predict', methods=['POST'])
def predictf():
    if request.is_json:
        paths = request.get_json().get('paths')
        print(f'{paths=}')
        y_pred = predict(paths)
        return {'class' : y_pred}

if __name__ == '__main__':
    app.run(debug=True)

# Paths to verify after the second phase
# paths = [[[34,258],[34,257],[35,254],[35,253],[35,251],[35,249],[35,247],[35,246],[35,244],[35,242],[35,239],[35,236],[35,234],[35,233],[36,232],[36,228],[37,225],[38,222],[39,220],[39,218],[41,215],[43,211],[43,210],[45,209],[46,207],[47,207],[47,206],[49,205],[51,205],[52,204],[53,203],[54,203],[55,203],[56,203],[57,203],[58,203],[60,203],[61,203],[62,203],[63,203],[64,203],[65,203],[64,203],[64,202],[63,202],[62,201],[61,201],[60,201],[60,200],[59,199],[58,199],[57,199],[56,199],[55,198],[54,198],[53,197],[52,196],[51,196],[50,196],[49,196],[49,195],[48,195],[48,194],[47,194],[47,193],[46,193],[46,192],[45,191],[44,191],[44,190],[43,189],[42,188],[42,186],[41,186],[41,185],[41,184],[41,183],[41,182],[41,180],[41,179],[41,177],[41,175],[41,174],[41,171],[41,169],[41,168],[41,167],[41,165],[41,164],[41,163],[41,160],[41,157],[42,155],[42,154],[42,153],[42,151],[42,149],[42,147],[43,146],[43,144],[43,142],[44,141],[44,140],[44,139],[44,138],[44,136],[45,135],[45,134],[46,134],[47,134],[47,135],[48,135],[48,136],[48,137],[49,138],[50,140],[51,141],[52,142],[53,144],[55,145],[56,146],[58,149],[59,151],[61,152],[61,154],[62,154],[62,155],[63,155],[64,155],[64,156],[65,156],[65,157],[66,157],[67,158],[69,158],[69,159],[70,160],[71,160],[72,161],[73,161],[73,162],[75,163],[76,165],[77,165],[77,166],[79,167],[80,169],[81,171],[82,171],[83,172],[84,173],[85,174],[86,174],[87,175],[88,176],[90,176],[90,177],[91,178],[93,178],[94,179],[96,180],[98,180],[99,180],[100,180],[103,181],[106,181],[108,181],[109,181],[110,181],[111,182],[114,182],[117,182],[119,182],[121,182],[122,182],[123,182]],[[123,182]],[[123,182],[125,182],[129,182],[133,181],[137,180],[139,180],[141,180],[145,179],[150,178],[152,178],[154,177],[158,176],[162,175],[167,175],[171,174],[176,173],[182,171],[184,171],[186,170],[189,169],[191,168],[195,168],[199,167],[204,166],[208,165],[211,164],[214,163],[220,162],[227,161],[232,161],[238,160],[243,159],[253,158],[260,157],[267,156],[275,155],[283,154],[292,154],[298,154],[304,154],[315,154],[326,154],[336,154],[346,154],[351,154]],[[351,154],[355,155],[359,158],[361,159],[367,160],[371,162],[378,164],[385,166],[389,168],[394,170],[400,172],[403,173],[408,174],[412,176],[417,178],[421,180],[423,181],[426,181],[429,183],[432,184],[435,186],[440,190],[444,192],[446,193],[449,196],[451,197],[452,198],[454,199],[456,201],[457,202],[458,203],[458,205],[459,208],[459,210],[459,211],[460,211],[460,213],[460,214],[460,215],[460,217],[460,218],[460,219],[459,220],[458,220],[458,221],[457,221],[456,221],[454,222],[453,222],[452,223],[448,225],[445,226],[442,228],[438,230],[437,230],[436,231],[433,233],[429,234],[426,236],[423,238],[419,239],[416,241],[415,242],[411,245],[407,248],[402,250],[397,253],[395,255],[390,257],[384,260],[378,263],[372,266],[365,268],[357,270],[350,272],[347,273],[342,274],[338,275],[336,275],[334,275],[331,275],[329,275]],[[329,275],[328,275],[325,275],[322,275],[315,275],[307,275],[302,275],[296,275],[291,275],[281,274],[272,273],[266,272],[260,271],[252,270],[244,269],[240,269],[232,268],[225,267],[222,267],[215,266],[208,265],[205,264],[199,263],[194,262],[191,261],[185,260],[179,259],[174,258],[168,257],[165,257],[158,255],[151,253],[148,252],[143,250],[136,247],[132,245],[129,244],[125,243],[122,242],[119,241],[118,241],[115,240],[112,239],[109,238],[106,238],[104,237],[103,236],[101,235],[100,235],[99,235],[99,234],[98,234],[97,234],[97,233],[96,232],[96,231],[95,231],[94,230],[93,230],[93,229],[92,229],[91,228],[89,227],[86,225],[85,225],[85,224],[84,223],[83,223]],[[83,223],[82,223],[80,226],[78,228],[76,229],[75,230],[74,231],[72,231],[70,232],[69,233],[68,233],[67,234],[66,235],[66,236],[65,236],[65,237],[64,237],[63,238],[62,239],[62,240],[61,240],[61,241],[61,242],[60,242],[59,243],[59,244],[58,244],[58,245],[57,246],[57,247],[56,248],[55,248],[55,249],[54,250],[51,253],[50,255],[49,256],[48,257],[47,259],[45,260],[44,261],[42,263],[41,264],[40,265],[38,266],[37,266],[36,267],[35,267]],[[357,177],[357,178],[356,181],[356,182],[355,184],[355,185],[355,187],[355,189],[355,190],[355,191],[356,192],[357,192],[358,193],[359,193],[360,194],[361,194],[362,195],[363,195],[364,194],[365,194],[366,193],[366,192],[367,192],[367,191],[368,190],[368,189],[368,188],[369,188],[369,187],[369,186],[369,185],[369,184],[368,184],[367,184],[367,183],[366,183],[365,183],[364,183],[363,182],[362,182],[361,182],[360,182],[359,182],[358,182],[357,182]],[[375,228],[376,228],[379,228],[381,228],[384,228],[388,228],[391,228],[396,228],[401,228],[404,228],[407,228],[409,227],[413,227],[416,227],[417,227],[420,227],[423,227],[426,227],[428,227],[430,227],[431,227],[432,227],[433,227],[434,227],[436,227],[437,227],[438,227],[439,227],[439,226],[440,226],[441,226],[442,226],[443,225],[445,223],[446,223],[446,222],[446,221],[447,221],[447,220],[447,219]]]